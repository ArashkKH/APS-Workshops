
// A LA CARTE ENTERTAINMENT – PRICELIST
// --------------------------------

####################################
 Data Structures
####################################
<OrderData>
	- orderID
	- <Attendees>
	- <ShowData>
	- <Sevices>

<PricingData>
	- <Discounts>
	- <Snacks>
	- <Valet>
	- <Coverage>
	- <Tickets>
	- ReservationFee

// second level sub Structures

<Attendees>
	- juniorNum = 0
	- AdultNum = 0
	- SeniorNum = 0

<ShowData>
	- Time
	- Type

<Sevices>
	<ValetData>
	<Snacks>

<Discounts>
	- for2
	- for3
	- for4
	- forMore

<Snacks>
	- nonAlchohol
	- alchoholic
	- misc

<Valet>
	- <StandarValet>
	- <VipValet>

<Coverage>
	- junior
	- Adult
	- Senior

<Tickets>
	- <Theatre>
	- <Musical>

// third level sub structures

<ValetData>
	- type
	- tipAmount

<Snacks>
	- nonAlchoholNum
	- alchoholicNum
	- miscNum

<StandarValet>
	- Morning
	- Evening

<VipValet>
	- Morning
	- Evening

<Theatre>
	- Morning
	- Evening
<Musical>
	- Morning
	- Evening
	



####################################
 Main logic
####################################

main
-------------------------

1.	DECLARE : CurrentOrder (<OrderData>)
2.	DECLARE : StaticData (<PricingData>)
3.	Declare sumOfPeople
4.	Declare PaymentResult and set to false
5.	Declare isQrScanned and set to false
6.	Declare currentScanService
7.	Declare isLeaving and set to false

8.	PRINT "Welcome to A la Carte Entertainment reservation System Click 
		add Order to start the process!"

9.	RENDER "Add Order" Button
10.	has the "Add Order" Button been pressed?
		NO : A. REPEAT from Step #5

11.	NAVIGATE to "ORDER iNFORMATION" page
12.	PROMPT "show type:"
13.	RENDER two options type of radioboxes ( Musical or Theatre )

14.	PROMPT "show time:"
15.	RENDER two options type of radioboxes ( Matinée or Evening )

16.	PROMPT "Enter number of Junior participants:"
17.	RENDER nummber input box for Juniors 

18.	PROMPT "Enter number of Adult participants:"
19.	RENDER nummber input box for Adults

20.	PROMPT "Enter number of Senior participants:"
21.	RENDER nummber input box for Seniors 

22.	RENDER "next step" Button
23.	has the "next step" Button been pressed?
	NO:	REPEAT from step #18

24.	CALL: updateTicketData ()

25.	NAVIGATE to "RESERVATION" page

26.	SET sumOfPeople to the total of participants
	(sumOfPeople = OrderData::Attendees:juniorNum +
					OrderData::Attendees:adultNum +
					OrderData::Attendees:seniorNum)

27.	PRINT "you have selected to participate in {OrderData::ShowData::Time} at {OrderData::ShowData::Type} for
	{sumOfPeople} please note to have your place reserved you need to make a payment of
	{PricingData::ReservationFee} dollars"

28.	RENDER "Click to pay Button"
29.	has the "Click to pay Button" been pressed ? 
		NO: REPEAT from step #26
		YES:A.	CALL processPayment_PayPal(PricingData::ReservationFee) // <-- closed Process
			B.	SET PaymentResult to result of processPayment_PayPal() function call (PaymentResult = processPayment_PayPal(50))
30.	was the payment successful? (PaymentResult == true)
		NO: A.	Print "Payment Unsuccessfull please try again or contact support."
			B.	REPEAT from step #26

31.	set PaymentResult to false

32.	NAVIGATE to "Ready For Show" Page

33.	Print	"Congrats, now you are ready to participate in the show
			please make sure you scan the QR-Code below for using any of the 
			on-sight services - additional charges may apply"

34. CALL: GenerateQrCode(OrderData::orderID) // <-- closed Process

// in entertainment sight

35.	CALL: fetchScanStat(OrderData::orderID) // <-- closed Process
36. SET the result of fetchScanStat() to isQrScanned (isQrScanned = fetchScanStat(OrderData::orderID)) 
37. has the user scanned their QrCode for any services? (isQrScanned == true)
		YES:	A.CALL: fetchScanService(OrderData::orderID) // <-- closed Process
				B.SET the result of fetchScanService() to currentScanService
				C.has the user scanned for valet Parking? (currentScanService == "valet")
					YES:1.	CALL addValetCharge()
						2.	set isQrScanned to false
				D.has the user scanned for SnackBar? (currentScanService == "SnackBar")
					YES:1.	CALL addSnackCharge()
						2.	set isQrScanned to false
				E.has the user scanned for leaving? (currentScanService == "leaving")
					YES:1.	set isLeaving to true
38.	is the user leaving the area ? (isLeaving == true)
		NO :	A.REPEAT from step#32
39.	print "your session has ended,
			your receipt is as following"
40. CALL:printReceipt(currentOrder ,StaticData)
41.	SET totalPayment to the result of printReceipt() function
42.	RENDER "Click to pay Button"
43.	has the "Click to pay Button" been pressed ? 
		NO: REPEAT from step #39
		YES:A.	CALL processPayment_PayPal(totalPayment) // <-- closed Process
			B.	SET PaymentResult to result of processPayment_PayPal() function call (PaymentResult = processPayment_PayPal(totalPayment))
44.	was the payment successful? (PaymentResult == true)
		NO: A.	Print "Payment Unsuccessfull please try again or contact support."
			B.	REPEAT from step #39
		YES:A.	Print "Payment Successful, thank you for using our services :)"
END